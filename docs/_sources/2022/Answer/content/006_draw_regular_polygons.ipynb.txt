{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "included-education",
   "metadata": {},
   "source": [
    "## 第06讲 绘制正多边形（一)\n",
    "Lecture06 Draw Regular Polygons(Part 1)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a42fe26b-76a0-4aa2-8482-032b367817a7",
   "metadata": {},
   "source": [
    "**<span style=\"color:red\">95/100</span>** Marked by Qiang\n",
    "\n",
    "整体做得非常好。\n",
    "\n",
    "-5：在第一题设置海龟起始位置的时候，side写成了50，题目要求side为120。这里可能是拷贝了第三题的代码而没有做相应的修改。"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "47304028-afd8-46df-8b69-71b9fbdfb230",
   "metadata": {
    "jp-MarkdownHeadingCollapsed": true,
    "tags": []
   },
   "source": [
    "### Problem 问题\n",
    "\n",
    "Use the methods in the `turtle` module to draw step by step as follows: 使用`turtle`模块里的方法按步骤绘制：\n",
    "\n",
    "1. Open a window(draw area) with both width and height 600; 打开宽高均为600的绘图窗口；\n",
    "2. Reset to make the turtle at the center and heading right; 重置海龟使其位于绘图区中央并朝向右侧；\n",
    "3. Lift up the pen; 抬起绘图笔；\n",
    "4. Move turtle 200 right and 60 backward to its current position(center of the draw area), keep the turtle heading right; 将海龟移动至当前位置(绘图区中央）的正右侧200和正后方60的位置，保持海龟仍然朝向右侧；\n",
    "5. Put down the pen, start to Draw; 放下绘图笔，准备绘图；\n",
    "6. Use **<span style=\"color:red\">red</span>** color, repeat **3** times: move forward 120, turn **120** degrees to left; 使用红色画笔，重复3次: 向前移动120后向左转120度；\n",
    "7. Use **<span style=\"color:orange\">orange</span>** color, repeat **4** times: move forward 120, turn **90** degrees to left; 使用橙色画笔，重复4次: 向前移动120后向左转90度；\n",
    "8. Use **<span style=\"color:yellow\">yellow</span>** color, repeat **5** times: move forward 120, turn **72** degrees to left; 使用黄色画笔，重复5次: 向前移动120后向左转72度；\n",
    "9. Use **<span style=\"color:green\">green</span>** color, repeat **6** times: move forward 120, turn **60** degrees to left; 使用绿色画笔，重复6次: 向前移动120后向左转60度；\n",
    "10. Use **<span style=\"color:cyan\">cyan</span>** color, repeat **7** times: move forward 120, turn **51.42857** degrees to left; 使用青色画笔，重复7次: 向前移动120后向左转51.42857度；\n",
    "11. Use **<span style=\"color:blue\">blue</span>** color, repeat **8** times: move forward 120, turn **45** degrees to left; 使用蓝色画笔，重复8次: 向前移动120后向左转45度；\n",
    "12. Use **<span style=\"color:purple\">purple</span>** color, repeat **9** times: move forward 120, turn **40** degrees to left; 使用紫色画笔，重复9次: 向前移动120后向左转40度；\n",
    "13. Use **<span style=\"color:black\">black</span>** color, repeat **10** times: move forward 120, turn **36** degrees to left; 使用黑色画笔，重复10次: 向前移动120后向左转36度；\n",
    "14. Hide turtle. 隐藏海龟图标。\n",
    "\n",
    "Finally, you will be get a figure like the following:\n",
    "\n",
    "<img src=\"figures/L006_01_regular_polygons.png\" width = 500>\n",
    "\n",
    "The figures drawn in turn are: regular triangle, regular quadrilateral (square), regular pentagon, regular hexagon, regular heptagon, regular octagon, regular nonagon, and regular decagon. 依次绘制出来的图形分别为：正三角形、正四边形（正方形）、正五边形、正六边形、正七边形、正八边形、正九边形、和正十边形。\n",
    "\n",
    "For each regular polygon, calculate the product of the number of sides and the angle of each turn. 对于每一个正多边形，计算边的数量和每一次转的角度的乘积。Take regular triangle as an example, the product is 3 * 120 = 360, where 3 is the number of sides(edges) and 120 is the degrees of each left turn。以正三角形为例，它的边数为3，每一次转120度，两者的乘积是3*120=360度。"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f9f70484-6376-4931-90fd-d86eca0986cd",
   "metadata": {
    "tags": []
   },
   "source": [
    "### Assignments 作业"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e9bb8f7e-7f1d-423e-a2b8-d4e1911ccf5e",
   "metadata": {},
   "source": [
    "1. 在不使用循环语句的条件下，按照要求一步一步完成本讲示例的编程，最终在绘图窗口里绘制出同样的正三、四、...、十边形。"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "55fcb3c0-ecd9-405e-bbd0-a269180bf70f",
   "metadata": {},
   "outputs": [],
   "source": [
    "from turtle import setup, reset, bye, pu, pd, bk, fd, left, right, st, ht, pencolor\n",
    "setup(600, 600, 0, 0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "6d1163fb-34a0-4393-8906-0782d9006c5c",
   "metadata": {},
   "outputs": [],
   "source": [
    "side = 120\n",
    "half_side = side / 2\n",
    "reset()                                  \n",
    "pu()                                    \n",
    "right(90)                                \n",
    "fd(200)\n",
    "left(90)\n",
    "bk(half_side)\n",
    "pd()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "ab522a42-855e-4f26-9b97-ad2dba11d584",
   "metadata": {},
   "outputs": [],
   "source": [
    "pencolor(\"red\")\n",
    "n = 3\n",
    "degree = 360 / n\n",
    "fd(side)\n",
    "left(degree)\n",
    "fd(side)\n",
    "left(degree)\n",
    "fd(side)\n",
    "left(degree)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "f60770f1-2769-46c2-8d75-6c21441823f4",
   "metadata": {},
   "outputs": [],
   "source": [
    "pencolor(\"orange\")\n",
    "n = 4\n",
    "degree = 360 / n\n",
    "fd(side)\n",
    "left(degree)\n",
    "fd(side)\n",
    "left(degree)\n",
    "fd(side)\n",
    "left(degree)\n",
    "fd(side)\n",
    "left(degree)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "d26e4c3a-fc71-4b68-8015-e7962de5cb97",
   "metadata": {},
   "outputs": [],
   "source": [
    "pencolor(\"yellow\")\n",
    "n = 5\n",
    "degree = 360 / n\n",
    "fd(side)\n",
    "left(degree)\n",
    "fd(side)\n",
    "left(degree)\n",
    "fd(side)\n",
    "left(degree)\n",
    "fd(side)\n",
    "left(degree)\n",
    "fd(side)\n",
    "left(degree)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "2ac44850-2c53-4b39-aae6-5c126ea6092d",
   "metadata": {},
   "outputs": [],
   "source": [
    "pencolor(\"green\")\n",
    "n = 6\n",
    "degree = 360 / n\n",
    "fd(side)\n",
    "left(degree)\n",
    "fd(side)\n",
    "left(degree)\n",
    "fd(side)\n",
    "left(degree)\n",
    "fd(side)\n",
    "left(degree)\n",
    "fd(side)\n",
    "left(degree)\n",
    "fd(side)\n",
    "left(degree)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "cd4060a2-5d13-4170-9ce8-88ee711ee54e",
   "metadata": {},
   "outputs": [],
   "source": [
    "pencolor(\"cyan\")\n",
    "n = 7\n",
    "degree = 360 / n\n",
    "fd(side)\n",
    "left(degree)\n",
    "fd(side)\n",
    "left(degree)\n",
    "fd(side)\n",
    "left(degree)\n",
    "fd(side)\n",
    "left(degree)\n",
    "fd(side)\n",
    "left(degree)\n",
    "fd(side)\n",
    "left(degree)\n",
    "fd(side)\n",
    "left(degree)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "07ec3233-a5f4-40ed-8ae7-9c3e0e427a15",
   "metadata": {},
   "outputs": [],
   "source": [
    "pencolor(\"blue\")\n",
    "n = 8\n",
    "degree = 360 / n\n",
    "fd(side)\n",
    "left(degree)\n",
    "fd(side)\n",
    "left(degree)\n",
    "fd(side)\n",
    "left(degree)\n",
    "fd(side)\n",
    "left(degree)\n",
    "fd(side)\n",
    "left(degree)\n",
    "fd(side)\n",
    "left(degree)\n",
    "fd(side)\n",
    "left(degree)\n",
    "fd(side)\n",
    "left(degree)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "73302341-80b4-4b3c-9bac-73e060c11015",
   "metadata": {},
   "outputs": [],
   "source": [
    "pencolor(\"purple\")\n",
    "n = 9\n",
    "degree = 360 / n\n",
    "fd(side)\n",
    "left(degree)\n",
    "fd(side)\n",
    "left(degree)\n",
    "fd(side)\n",
    "left(degree)\n",
    "fd(side)\n",
    "left(degree)\n",
    "fd(side)\n",
    "left(degree)\n",
    "fd(side)\n",
    "left(degree)\n",
    "fd(side)\n",
    "left(degree)\n",
    "fd(side)\n",
    "left(degree)\n",
    "fd(side)\n",
    "left(degree)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "e1a6fb9f-b4b4-4528-ae15-517baf4d8571",
   "metadata": {},
   "outputs": [],
   "source": [
    "pencolor(\"black\")\n",
    "n = 10\n",
    "degree = 360 / n\n",
    "fd(side)\n",
    "left(degree)\n",
    "fd(side)\n",
    "left(degree)\n",
    "fd(side)\n",
    "left(degree)\n",
    "fd(side)\n",
    "left(degree)\n",
    "fd(side)\n",
    "left(degree)\n",
    "fd(side)\n",
    "left(degree)\n",
    "fd(side)\n",
    "left(degree)\n",
    "fd(side)\n",
    "left(degree)\n",
    "fd(side)\n",
    "left(degree)\n",
    "fd(side)\n",
    "left(degree)\n",
    "ht()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bba2d9ba-df7a-44fe-a0c2-b3b4ad4420b3",
   "metadata": {},
   "source": [
    "2. 思考并用文字回答在绘制某一个正多边形的时候，为什么小海龟每次绘制的边的长度相同，每次转的度数也相同？如果改变海龟每次绘制的边长或者（和）改变每次转动的角度，那么还能绘制出正多边形吗？"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "138ad958-9cd2-4543-bd99-44b39a4f6558",
   "metadata": {},
   "outputs": [],
   "source": [
    "#答：假如小海龟每次绘制的边的长度不相同，每次转的度数也不相同，那画出来的就不是正多边形，甚至画出来的就不是封闭图形。（可以参照下方的举例。）\n",
    "#答：如果改变海龟每次绘制的边长或者（和）改变每次转动的角度，那么就不能绘制出正多边形。"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "0dd05057-424c-4248-b3d1-4fc582db5af1",
   "metadata": {},
   "outputs": [],
   "source": [
    "#假如边长和转的角度不一样———例：\n",
    "from turtle import setup, reset, bye, pu, pd, bk, fd, left, right, st, ht, pencolor\n",
    "setup(600, 600, 0, 0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "71b9f2c8-0bc4-4bc2-bb6b-288949a97b3b",
   "metadata": {},
   "outputs": [],
   "source": [
    "side = 50\n",
    "half_side = side / 2\n",
    "reset()                                  \n",
    "pu()                                    \n",
    "right(90)                                \n",
    "fd(200)\n",
    "left(90)\n",
    "bk(half_side)\n",
    "pd()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "cf2c81d7-5385-4e91-a619-1279908ec58b",
   "metadata": {},
   "outputs": [],
   "source": [
    "pencolor(\"yellow\")\n",
    "fd(24)\n",
    "left(93)\n",
    "fd(56)\n",
    "left(41)\n",
    "fd(67)\n",
    "left(59)\n",
    "fd(81)\n",
    "left(17)\n",
    "fd(64)\n",
    "left(37)\n",
    "ht()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "digital-consensus",
   "metadata": {},
   "source": [
    "3. 仿照本讲示例，绘制边长为50的**正二十边形**。海龟起始点同本讲示例。颜色任选。"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "ea26b4cd-8b73-4f0d-87d6-256ad9732a53",
   "metadata": {},
   "outputs": [],
   "source": [
    "from turtle import setup, reset, bye, pu, pd, bk, fd, left, right, st, ht, pencolor\n",
    "setup(700, 700, 0, 0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "cba23605-5bdb-48f5-8e11-b4c60339eebc",
   "metadata": {},
   "outputs": [],
   "source": [
    "side = 50\n",
    "half_side = side / 2\n",
    "reset()                                  \n",
    "pu()                                    \n",
    "right(90)                                \n",
    "fd(200)                                  \n",
    "right(90)                                \n",
    "fd(half_side)                            \n",
    "right(180)   \n",
    "pd() \n",
    "pencolor(\"purple\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "1cdabff7-70d4-47d2-afda-807279b3cb95",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Look at the patterning I have drawn!\n"
     ]
    }
   ],
   "source": [
    "st()\n",
    "i = 0                \n",
    "n = 20               \n",
    "degree = 360 / n         \n",
    "while i < n:         \n",
    "    fd(side)         \n",
    "    left(degree)     \n",
    "    i = i + 1        \n",
    "    \n",
    "print(\"Look at the patterning I have drawn!\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9ca5ecdf-36eb-4d41-bdac-130707951492",
   "metadata": {},
   "source": [
    "4. 仿照本讲示例，绘制边长为10的**正一百边形**。通过修改刚开始绘图时海龟的位置，使得绘制的正一百边形在绘图区域**左右**居中，颜色任选。"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "d11874ff-1700-468e-8289-b9c69fa64eb5",
   "metadata": {},
   "outputs": [],
   "source": [
    "from turtle import setup, reset, bye, pu, pd, bk, fd, left, right, st, ht, pencolor\n",
    "setup(700, 700, 0, 0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "8feac4b1-accf-49ff-b03c-db7ec3e7b829",
   "metadata": {},
   "outputs": [],
   "source": [
    "side = 10\n",
    "half_side = side / 2\n",
    "reset()                                  \n",
    "pu()                                    \n",
    "right(90)                                \n",
    "fd(200)                                  \n",
    "right(90)                                \n",
    "fd(half_side)                            \n",
    "right(180)   \n",
    "pd() \n",
    "pencolor(\"purple\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "7c08a901-4374-4615-8ad1-c6c5e18d2c49",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Look at the patterning I have drawn!\n"
     ]
    }
   ],
   "source": [
    "st()\n",
    "i = 0                \n",
    "n = 100               \n",
    "degree = 360 / n         \n",
    "while i < n:         \n",
    "    fd(side)         \n",
    "    left(degree)     \n",
    "    i = i + 1        \n",
    "ht()\n",
    "print(\"Look at the patterning I have drawn!\")"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
