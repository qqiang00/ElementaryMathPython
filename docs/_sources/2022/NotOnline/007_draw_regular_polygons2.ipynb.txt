{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "included-education",
   "metadata": {},
   "source": [
    "## 第06讲 绘制正多边形（二)\n",
    "Lecture06 Draw Regular Polygons（Part 2)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "periodic-register",
   "metadata": {},
   "source": [
    "### Problem 问题\n",
    "\n",
    "Use the methods in the `turtle` module to draw step by step as follows: 使用`turtle`模块里的方法按步骤绘制：\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "animated-batch",
   "metadata": {},
   "source": [
    "### Math Background 数学背景\n",
    "1. 对于任意一个（正）多边形，其内角和（sum of interior angles）`total_angle`可以用下面的公式来计算：\n",
    "  ```python\n",
    "  total_angle = (num_side - 2) * 180 # 其中，`num_side`表示的是这个（正）多边形的边的数量。\n",
    "  ``` \n",
    "2. 正多边形，其外角和（sum of exterior angles）永远是360度。事实上对于任意一个凸（convex)多边形，即使不是正多边形，其外交和也总是360度。"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "sorted-furniture",
   "metadata": {
    "tags": []
   },
   "source": [
    "### Prerequisites 预备知识"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "7879012d-02eb-4b5b-b3b1-6a9cba77dfdb",
   "metadata": {},
   "outputs": [],
   "source": [
    "from random import randint\n",
    "from turtle import setup, reset, bye, pu, pd, bk, fd, left, right, st, ht\n",
    "# from turtle import penup, pendown, backward, forward, showturtle, hideturtle\n",
    "from turtle import pencolor\n",
    "setup(600, 600, 0, 0)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "13385e4a-66c6-4af8-adc0-5e5a35abfc85",
   "metadata": {},
   "source": [
    "彩虹色的名称分别为\"red\",\"orange\",\"yellow\",\"green\",\"cyan\",\"blue\",\"purple\"。"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "89be42b8-40fd-4f70-ad17-83f9cd955dc0",
   "metadata": {},
   "source": [
    "**Exercise**\n",
    "1. use `while` loop to draw a regular hexagon(6-gon) 使用`while`循环化一个正六边形"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "8344423a-c3a6-404e-9a33-0ccc4b75565a",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "be73c70a-f090-4bc3-92e0-14f4c38dccc7",
   "metadata": {},
   "source": [
    "2. Run the following code and describe how turtle is walking 运行下面的代码描述海龟的运行路线"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "326d4d04-6e5c-4ded-a382-d4e252d6169e",
   "metadata": {},
   "source": [
    "3. 初步理解`if`和`while`的区别 Understand the difference between `if` and `while`"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "b07bdf84-6814-42be-a1be-9316ebda6d90",
   "metadata": {},
   "outputs": [],
   "source": [
    "side = 120\n",
    "half_side = side / 2\n",
    "reset()\n",
    "pu()\n",
    "right(90)\n",
    "fd(200)\n",
    "left(90)\n",
    "bk(half_side)\n",
    "pd()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "a8b4bc89-a38c-437b-9f6a-4d0d9bee03c2",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "out of if,从if里面出来了\n"
     ]
    }
   ],
   "source": [
    "st()\n",
    "i = 0                # 已经画了几条边\n",
    "n = 9                # 几边形\n",
    "degree = 40          # 对于九边形来说\n",
    "if i < n:            # 只要 i<n（没画完)\n",
    "    fd(side)         #   前进一小步\n",
    "    left(degree)     #   转个左弯\n",
    "    i = i + 1        #   i需要增加一下表示又画了一条边\n",
    "    \n",
    "print(\"out of if,从if里面出来了\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "81c9b087-efe8-4197-8f72-c14e31817afb",
   "metadata": {},
   "outputs": [],
   "source": [
    "side = 120\n",
    "half_side = side / 2\n",
    "reset()\n",
    "pu()\n",
    "right(90)\n",
    "fd(200)\n",
    "left(90)\n",
    "bk(half_side)\n",
    "pd()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "e2e69644-8aa3-4fe0-8eba-f1434782cbcb",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "out of while,从while里面出来了\n"
     ]
    }
   ],
   "source": [
    "st()\n",
    "i = 0                # 已经画了几条边\n",
    "n = 9                # 几边形\n",
    "degree = 40          # 对于九边形来说\n",
    "while i < n:         # 只要 i<n（没画完)\n",
    "    fd(side)         #   前进一小步\n",
    "    left(degree)     #   转个左弯\n",
    "    i = i + 1        #   i需要增加一下表示又画了一条边\n",
    "    \n",
    "print(\"out of while,从while里面出来了\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "edacb659-dafd-41fd-b19d-5bded4563db8",
   "metadata": {},
   "source": [
    "### Solution 编程求解"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2fce4645-f056-4be7-86d7-886d8b72c44e",
   "metadata": {},
   "source": [
    "### Summary 知识点小结\n",
    "\n",
    "1. 理解`if`和`while`代码块在执行流程上的相同点和不同点；\n",
    "2. `while`循环内部也可以有`while`循环；\n",
    "3. 控制循环的条件语句中使用到的变量可以发挥重要作用\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bc1af148-1c1d-4b2b-90d9-5a87aab8ebc2",
   "metadata": {},
   "source": [
    "### CS Tips 计算机小知识\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f9f70484-6376-4931-90fd-d86eca0986cd",
   "metadata": {},
   "source": [
    "### Assignments 作业"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3c843578-33b0-4e36-a753-35a6fd639f9f",
   "metadata": {},
   "source": [
    "1. 使用`while`循环绘制下图。要求：\n",
    "      - 所有的三个正方形都完全位于尺寸为600×400的绘图区域的中心；\n",
    "      - 三个正方形的边长依次为250，150，和50。\n",
    "      - 给每一行代码添加注释，解释其作用。\n",
    "\n",
    "   <img src = \"figures/L005_01_squares.png\" width = 500>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "77dabcbe-f4b3-4b3b-a3df-6fc36acefff9",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "6de8eb4b-5674-4052-b804-99501e591f56",
   "metadata": {},
   "source": [
    "4. 使用`turtle`绘图库中已经学过的方法，在一个或多个代码单元格中编写任意行数的代码，绘制出按下面排列的一组(5个)正方形。具体要求：\n",
    "   - 最中间的正方形位于画布（绘图区）的正中央；\n",
    "   - 每一个正方形的边长为80；\n",
    "   - 你的代码可以使用也可以不使用`while`循环语句；\n",
    "   - 给每一行代码添加注释，解释其作用。\n",
    "   \n",
    "   \n",
    "   <img src = \"figures/L006_e03_square_combinations.png\" width = 500>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "cd59a905-c3cb-44d0-83c4-aa37fd3ed24a",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "adca4acd-8c5f-4992-aec1-223e48207e37",
   "metadata": {},
   "source": [
    "5. 使用`while`循环，使用`randint`方法，编程完成下面两小题:\n",
    "    - 生成100个范围在1,100（包括1和100）的随机数，计算这100个随机数的平均数，并计算该平均数与50的差值。打印这个平均数和得到的差。\n",
    "    - 生成10000个这样的随机数，计算平均值和平均值与50的差，打印出来。"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "f8edd849-bb6f-4f26-80d5-b94a45d59d86",
   "metadata": {},
   "outputs": [],
   "source": [
    "from random import randint\n",
    "n = 100\n",
    "i = 0\n",
    "num, sum_num = 0, 0\n",
    "while i < n:\n",
    "    num = randint(1, 100)\n",
    "    sum_num += num\n",
    "    i += 1\n",
    "    \n",
    "avg = sum_num / n\n",
    "diff = avg - 50\n",
    "print(\"avg: \", avg, \"diff to 50 is:\", diff)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "2e3bd543-88c8-42b6-96ce-40a83bbf0dbe",
   "metadata": {},
   "outputs": [],
   "source": [
    "from random import randint\n",
    "n = 10000\n",
    "i = 0\n",
    "num, sum_num = 0, 0\n",
    "while i < n:\n",
    "    num = randint(1, 100)\n",
    "    sum_num += num\n",
    "    i += 1\n",
    "    \n",
    "avg = sum_num / n\n",
    "diff = avg - 50\n",
    "print(\"avg: \", avg, \"diff to 50 is:\", diff)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6c8edb19-5555-4e4c-b0b6-8870f8b29ac5",
   "metadata": {},
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
