{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "59ced469-0590-4e0c-8fa6-aa4b151e6a2c",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import seaborn as sns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "7609a61d-a256-40f2-8340-5ce27edeaeee",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "      rs1  rs2  rs3\n",
      "1111  0.5  0.5  1.0\n",
      "1112  0.0  0.5  0.5\n",
      "1115  0.0  0.0  0.5\n"
     ]
    }
   ],
   "source": [
    "df = pd.DataFrame(np.array(([0.5, 0.5, 1], [0, 0.5, 0.5], [0, 0, 0.5])),\n",
    "                  index=['1111', '1112', '1115'],\n",
    "                  columns=['rs1', 'rs2', 'rs3'])\n",
    "print(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "6f0d5eb4-2b55-4732-98c1-e7995d2d8261",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "      one  two  three  sex\n",
      "1111    1    2      3    0\n",
      "1112    4    5      6    0\n",
      "1113    7    8      9    1\n",
      "1114   10   11     12    1\n",
      "1115   13   14     15    0\n",
      "1116   16   17     18    0\n"
     ]
    }
   ],
   "source": [
    "df_pheno = pd.DataFrame(np.array(([1, 2, 3, 0],                 # train\n",
    "                                  [4, 5, 6, 0],                 # train\n",
    "                                  [7, 8, 9, 1],                 # train, sex=1\n",
    "                                  [10, 11, 12, 1],              # train, sex=1\n",
    "                                  [13, 14, 15, 0],              # train,\n",
    "                                  [16, 17, 18, 0])),            # not train\n",
    "                  index=['1111', '1112', '1113', '1114', '1115', '1116'],\n",
    "                  columns=['one', 'two', 'three', 'sex'])\n",
    "print(df_pheno)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "17672504-1f5e-4c89-ba06-010cbf77799e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['1111', '1112', '1115', '1116']\n",
      "(3, 3)\n",
      "      rs1  rs2  rs3\n",
      "1111  0.5  0.5  1.0\n",
      "1112  0.0  0.5  0.5\n",
      "1115  0.0  0.0  0.5\n"
     ]
    }
   ],
   "source": [
    "df_pheno = df_pheno[df_pheno[\"sex\"] == 0]\n",
    "print(df_pheno.index.to_list())\n",
    "df_new = df.filter(items = df_pheno.index.to_list(), axis=0)\n",
    "print(df_new.shape)\n",
    "print(df_new)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "6d098baf-d44d-434e-95e9-c4de1ce2db18",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[0.5 0.5]\n",
      " [0.  0.5]\n",
      " [0.  0. ]] [1.  0.5 0.5]\n"
     ]
    }
   ],
   "source": [
    "ds = df_new.to_numpy()\n",
    "X, y = ds[:, :-1], ds[:, -1]\n",
    "print(X, y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "edb7509f-08dc-488f-97b7-86456defaca4",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(3,)\n"
     ]
    }
   ],
   "source": [
    "print(y.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "2d528932-1a20-4a43-aa87-3582204f123a",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
